"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[95909],{75631:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(3289);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,c(c({ref:t},l),{},{components:n})):r.createElement(f,c({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,c=new Array(a);c[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,c[1]=o;for(var p=2;p<a;p++)c[p]=n[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},87524:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=n(1629),i=n(17322),a=(n(3289),n(75631)),c=["components"],o={id:"current-pending-order-payment-intent-client-secret",title:"currentPendingOrderPaymentIntentClientSecret"},s=void 0,p={unversionedId:"graphql/queries/current-pending-order-payment-intent-client-secret",id:"graphql/queries/current-pending-order-payment-intent-client-secret",isDocsHomePage:!1,title:"currentPendingOrderPaymentIntentClientSecret",description:"DEPRECATED: Domain-specific queries are being deprecated. Please use the paymentintentclient_secret field on the Order type instead.",source:"@site/docs/graphql/queries/current-pending-order-payment-intent-client-secret.mdx",sourceDirName:"graphql/queries",slug:"/graphql/queries/current-pending-order-payment-intent-client-secret",permalink:"/docs/graphql/queries/current-pending-order-payment-intent-client-secret",editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/queries/current-pending-order-payment-intent-client-secret.mdx",tags:[],version:"current",frontMatter:{id:"current-pending-order-payment-intent-client-secret",title:"currentPendingOrderPaymentIntentClientSecret"},sidebar:"sidebar",previous:{title:"currentAbility",permalink:"/docs/graphql/queries/current-ability"},next:{title:"currentPendingOrder",permalink:"/docs/graphql/queries/current-pending-order"}},l=[{value:"Type",id:"type",children:[{value:"String",id:"string",children:[],level:4}],level:3}],u={toc:l};function d(e){var t=e.components,n=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("span",{class:"badge badge--warning"},"DEPRECATED: Domain-specific queries are being deprecated. Please use the `payment_intent_client_secret` field on the Order type instead."),(0,a.kt)("p",null,"If there is a signed-in user and they have a pending store order open in the convention\nassociated with the domain name of this HTTP request, this generates a Stripe PaymentIntent\nfor that order and returns the client secret from that PaymentIntent. This can be used to\nstart a payment on the client side, for example using Apple Pay or Google Pay."),(0,a.kt)("p",null,"If there is no signed-in user, this query will error out."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"currentPendingOrderPaymentIntentClientSecret: String!\n\n")),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("h4",{id:"string"},(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String"))),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."))}d.isMDXComponent=!0}}]);