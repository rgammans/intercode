"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[3643],{75631:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(3289);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=d(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||s[m]||a;return n?r.createElement(f,p(p({ref:t},c),{},{components:n})):r.createElement(f,p({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,p[1]=i;for(var d=2;d<a;d++)p[d]=n[d];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},30893:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var r=n(236),o=n(86460),a=(n(3289),n(75631)),p=["components"],i={id:"update-event-proposal-admin-notes-payload",title:"UpdateEventProposalAdminNotesPayload"},l=void 0,d={unversionedId:"graphql/objects/update-event-proposal-admin-notes-payload",id:"graphql/objects/update-event-proposal-admin-notes-payload",title:"UpdateEventProposalAdminNotesPayload",description:"Autogenerated return type of UpdateEventProposalAdminNotes",source:"@site/docs/graphql/objects/update-event-proposal-admin-notes-payload.mdx",sourceDirName:"graphql/objects",slug:"/graphql/objects/update-event-proposal-admin-notes-payload",permalink:"/docs/graphql/objects/update-event-proposal-admin-notes-payload",editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/objects/update-event-proposal-admin-notes-payload.mdx",tags:[],version:"current",frontMatter:{id:"update-event-proposal-admin-notes-payload",title:"UpdateEventProposalAdminNotesPayload"},sidebar:"sidebar",previous:{title:"UpdateEventPayload",permalink:"/docs/graphql/objects/update-event-payload"},next:{title:"UpdateEventProposalPayload",permalink:"/docs/graphql/objects/update-event-proposal-payload"}},c=[{value:"Fields",id:"fields",children:[{value:"<code>clientMutationId</code> (String)",id:"clientmutationid-string",children:[],level:4},{value:"<code>event_proposal</code> (EventProposal)",id:"event_proposal-eventproposal",children:[],level:4}],level:3}],s={toc:c};function u(e){var t=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Autogenerated return type of UpdateEventProposalAdminNotes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"type UpdateEventProposalAdminNotesPayload {\n  clientMutationId: String\n  event_proposal: EventProposal!\n}\n")),(0,a.kt)("h3",{id:"fields"},"Fields"),(0,a.kt)("h4",{id:"clientmutationid-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"clientMutationId")," (",(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String")),")"),(0,a.kt)("p",null,"A unique identifier for the client performing the mutation."),(0,a.kt)("h4",{id:"event_proposal-eventproposal"},(0,a.kt)("inlineCode",{parentName:"h4"},"event_proposal")," (",(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql/objects/event-proposal"},(0,a.kt)("inlineCode",{parentName:"a"},"EventProposal")),")"))}u.isMDXComponent=!0}}]);