"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[95909],{75631:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(3289);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,c=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),d=u(r),m=i,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||c;return r?n.createElement(f,a(a({ref:t},l),{},{components:r})):n.createElement(f,a({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=r.length,a=new Array(c);a[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var u=2;u<c;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},40728:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var n=r(1629),i=r(17322),c=(r(3289),r(75631)),a=["components"],o={id:"current-pending-order-payment-intent-client-secret",title:"currentPendingOrderPaymentIntentClientSecret"},p=void 0,u={unversionedId:"graphql/queries/current-pending-order-payment-intent-client-secret",id:"graphql/queries/current-pending-order-payment-intent-client-secret",isDocsHomePage:!1,title:"currentPendingOrderPaymentIntentClientSecret",description:"No description",source:"@site/docs/graphql/queries/current-pending-order-payment-intent-client-secret.mdx",sourceDirName:"graphql/queries",slug:"/graphql/queries/current-pending-order-payment-intent-client-secret",permalink:"/docs/graphql/queries/current-pending-order-payment-intent-client-secret",editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/queries/current-pending-order-payment-intent-client-secret.mdx",tags:[],version:"current",frontMatter:{id:"current-pending-order-payment-intent-client-secret",title:"currentPendingOrderPaymentIntentClientSecret"},sidebar:"sidebar",previous:{title:"currentAbility",permalink:"/docs/graphql/queries/current-ability"},next:{title:"currentPendingOrder",permalink:"/docs/graphql/queries/current-pending-order"}},l=[{value:"Type",id:"type",children:[]}],s={toc:l};function d(e){var t=e.components,r=(0,i.Z)(e,a);return(0,c.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"No description"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-graphql"},"currentPendingOrderPaymentIntentClientSecret: String!\n\n")),(0,c.kt)("h3",{id:"type"},"Type"),(0,c.kt)("h4",{id:"string"},(0,c.kt)("a",{parentName:"h4",href:"/docs/graphql/scalars/string"},(0,c.kt)("inlineCode",{parentName:"a"},"String"))),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"String")," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."))}d.isMDXComponent=!0}}]);