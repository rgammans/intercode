"use strict";(self.webpackChunkdoc_site=self.webpackChunkdoc_site||[]).push([[30162],{75631:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var i=t(3289);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=i.createContext({}),l=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return i.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=l(t),f=r,g=p["".concat(u,".").concat(f)]||p[f]||d[f]||a;return t?i.createElement(g,s(s({ref:n},c),{},{components:t})):i.createElement(g,s({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=p;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var l=2;l<a;l++)s[l]=t[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},30701:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return c},default:function(){return p}});var i=t(1629),r=t(17322),a=(t(3289),t(75631)),s=["components"],o={id:"notifier-liquid-assigns",title:"notifierLiquidAssigns"},u=void 0,l={unversionedId:"graphql/queries/notifier-liquid-assigns",id:"graphql/queries/notifier-liquid-assigns",isDocsHomePage:!1,title:"notifierLiquidAssigns",description:"DEPRECATED: Domain-specific queries are being deprecated. Please use the notifierliquidassigns field on the Convention type instead.",source:"@site/docs/graphql/queries/notifier-liquid-assigns.mdx",sourceDirName:"graphql/queries",slug:"/graphql/queries/notifier-liquid-assigns",permalink:"/docs/graphql/queries/notifier-liquid-assigns",editUrl:"https://github.com/neinteractiveliterature/intercode/edit/main/doc-site/docs/graphql/queries/notifier-liquid-assigns.mdx",tags:[],version:"current",frontMatter:{id:"notifier-liquid-assigns",title:"notifierLiquidAssigns"},sidebar:"sidebar",previous:{title:"my_signups",permalink:"/docs/graphql/queries/my-signups"},next:{title:"oauthPreAuth",permalink:"/docs/graphql/queries/oauth-pre-auth"}},c=[{value:"Arguments",id:"arguments",children:[{value:"<code>eventKey</code> (String!)",id:"eventkey-string",children:[],level:4}],level:3},{value:"Type",id:"type",children:[{value:"LiquidAssign",id:"liquidassign",children:[],level:4}],level:3}],d={toc:c};function p(e){var n=e.components,t=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("span",{class:"badge badge--warning"},"DEPRECATED: Domain-specific queries are being deprecated. Please use the `notifier_liquid_assigns` field on the Convention type instead."),(0,a.kt)("p",null,"Returns all the Liquid assigns for rendering a particular notification event in the current\ndomain name. This is a combination of globally-accessible Liquid assigns, values specific\nto that notification event, and domain-specific user-defined CMS variables."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"notifierLiquidAssigns(\n  eventKey: String!\n): [LiquidAssign!]!\n\n")),(0,a.kt)("h3",{id:"arguments"},"Arguments"),(0,a.kt)("h4",{id:"eventkey-string"},(0,a.kt)("inlineCode",{parentName:"h4"},"eventKey")," (",(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql/scalars/string"},(0,a.kt)("inlineCode",{parentName:"a"},"String!")),")"),(0,a.kt)("p",null,"The key of the notification event to use for generating assigns."),(0,a.kt)("h3",{id:"type"},"Type"),(0,a.kt)("h4",{id:"liquidassign"},(0,a.kt)("a",{parentName:"h4",href:"/docs/graphql/objects/liquid-assign"},(0,a.kt)("inlineCode",{parentName:"a"},"LiquidAssign"))))}p.isMDXComponent=!0}}]);